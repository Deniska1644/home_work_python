задача 2
Дан список повторяющихся элементов. Вернуть список с дублирующимися элементами.
В результирующем списке не должно быть дубликатов.

import random


print(some_list := [random.randint(1,10) for i in range(10)])
set_list = set(some_list)
no_double_list = [i for i in set_list if some_list.count(i) >= 2]
print (no_double_list)


Задача №3
В большой текстовой строке подсчитать количество встречаемых слов и 
вернуть 10 самых частых. Не учитывать знаки препинания и регистр символов.
За основу возьмите любую статью из википедии или из документации к языку.


def format_text (some_str):
    new_list = []
    new_word = ""
    
    for element in some_str.split():
        if element.isalpha():
            new_list.append(element.lower())
        else:
            for alpha in element:
                if alpha.isalpha():
                    new_word += alpha
            new_list.append(new_word.lower())
    
    return new_list


def create_count_dict (format_some_str):
    my_dict = {}
    
    for item in format_some_str:
        my_dict[item] = my_dict.get(item,0)+1
        
    return sorted(my_dict.items(), key=lambda x:x[1], reverse=True)


if __name__ =="__main__":

    some_str = "aaaaaaaa asdsa  a aa aa, Asfa sss 1213 44 ! ...! fdsd  ddd   ddddd dd  dddd ddd ddd d d d d d d d d"
    format_some_str = format_text(some_str)
    new_dict = create_count_dict(format_some_str)
    
    for key, value in new_dict[:10]:
        print(f"{key} - {value}")



Задача №4
# Создайте словарь со списком вещей для похода в качестве ключа и их массой в качестве значения.
# Определите какие вещи влезут в
# рюкзак передав его максимальную грузоподъёмность. Достаточно вернуть один допустимый вариант. 
# *Верните все возможные варианты комплектации рюкзака.

def counter_weight_max(some_bag,weight_bag):
    new_some_bag = sorted(some_bag.items(),key=lambda x:x[1],reverse=True)
    answer_list = []
    max_answer = 0    
    
    for i in range(len(new_some_bag)):
        for element in new_some_bag:
            if max_answer + element[1] > weight_bag:
                continue
            elif max_answer + element[1] == weight_bag:
                answer_list.append(element)
                for values in answer_list:
                    print(*values)
                print("__________")
                max_answer = 0
                new_some_bag.pop(0)
                answer_list.clear()
                break
            else:
                answer_list.append(element)
                max_answer += element[1]
        

if __name__=="__main__":
    weight_bag = int(input("введите размер сумки"))
    some_bag = {
        "палатка":10,
        "котелок":9,
        "кошка":8,
        "собака":7,
        "компухтер":6,
        "ахахах":5,
        "азазаз":4,
        "dsfsdf":3,
        "телефон":1
    }
    
    print(counter_weight_max(some_bag,weight_bag))





        




